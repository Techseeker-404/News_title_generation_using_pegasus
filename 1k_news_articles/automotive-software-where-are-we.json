{"Author": "Egil Juliussen\u00a0", "Date": "08.24.2020", "Keywords": "", "Article": " The automotive electronics are on their way to become software-defined systems. Looking back on the last five decades, the car has been the most complex product in volume production when all the mechanical, electromechanical and electronics systems are included. Electronics systems have augmented and/or replaced mechanical and electromechanical systems during this time frame, and much more is on the way.  This means that the car\u00e2\u0080\u0099s electronics systems will sooner or later be the most complex electronics in volume production and may already have reached this distinction. Yes, airplanes may have more parts complexity and supercomputers may have more electronics complexity, but they are not produced in tens of million units per year. The automotive electronics have rapidly increased the software content in all cars\u00e2\u0080\u0094some more than others. There are many articles that claim that a state-of-the art car has over 100 million lines of software code. I have not seen a detailed breakdown of what is included in the 100 million figure, and if someone has such data it would be very useful. There is no question that car electronics and software content will grow significantly in the future as Advanced Driver-Assistance System (ADAS), connectivity, cybersecurity, self-driving and other functionality expands. I do not see many stories discussing automotive software in terms of strategic issues, software segments, key technology and other important issues. This column looks at these differences and give perspectives on current automotive software industry. There are very important differences between hardware and software that impact how to be successful in automotive software. Automotive software has come a long way in the last two decades. In the 1990s automotive software was primarily embedded software that controlled driving electronics and simple entertainment systems. These systems had increasing software complexity but few (if any) embedded systems had code size in the 1 million lines range. The auto OEMs and their Tier 1 suppliers developed these embedded systems on their own. This changed in the late 1990s when infotainment and embedded navigation systems grew in features and capabilities that needed an operating system (OS) to manage the software complexity. The OS brought the high-tech industry to automotive software including QNX, Green Hills, Wind River, Microsoft and others. In the last decade open source software such as Linux has also become important in automotive software. Create-Make-Market-Use Concept The next figure shows how automotive hardware and software differ. But the structure of the figure needs some background and explanation. The figure shows four phases that can be used for any type of product or industry. The \u201ccreate\u201d phase is the R&D and design of the product. The \u201cmake\u201d phase is production of the product including the cost of all parts, manufacturing cost and the supply chain. The third phase is the \u201cmarketing\u201d of the product including advertising, sales and distribution channels\u00e2\u0080\u0094in essence, all activities and cost to get the product to the customer. The fourth phase is the customer\u00e2\u0080\u0099s \u201cuse\u201d phase, which is quite long for the auto industry. The create-make-market concept was something I learned while at Texas Instruments as it was heavily used in the 1970s and 1980s. I added the use-phase when I worked at IHS Markit. I leveraged the insights from these four phases in reports and/or presentations as a tool to analyze many automotive market segments including software, battery electric vehicles (BEVs), 3D printing and others. The figure is focused on the individual importance of each of the four phases for hardware and software. But there are also comments on how hardware and software impact the success of the car in each phase. Click the table to enlarge (Source: Egil Juliussen) Hardware Phases The top of the figure shows key characteristics for the four phases of automotive hardware. The hardware \u201ccreate\u201d phase determines the electronics feature set and continue to increase in prominence. The chip industry provides the most important hardware parts with much more to come. The ecosystem for hardware is becoming more critical and includes all the development systems and other hardware design tools. The ecosystem around processor platforms used in automotive electronics are also gaining importance. The cost of the hardware \u201ccreate\u201d phase is counted in millions or tens of millions of dollars, but since production volume is in hundreds of thousands of units, the cost per car is low. The \u201cmake\u201d phase is the most expensive phase due to the cost of all the hardware electronics parts or bill-of-material (BOM) cost. There is also cost to manage the hardware supply chain, manufacturing equipment, people cost and much more. Overall, the electronics hardware costs are a small part of the total cost of car, but it has been increasing even with cost declines of individual electronics parts. The typical cost of all electronics hardware systems ranges from $3,000 to $8,000\u00e2\u0080\u0094with the higher values for luxury cars. The \u201cmarket\u201d phase for hardware varies by component and system types. In most cases the hardware market phase goes through a Tier 1 supplier to become part of a car electronics system. Hardware capabilities also have an increasing influence on car sales. This indirect impact comes from all the desirable features that are created by hardware capabilities. Future and emerging capabilities that will be popular include ADAS, cybersecurity hardware, upgradeable hardware and self-driving features. The automotive use phase typically lasts 10 to 15 years and sometimes longer. Such long lifetime requires excellent hardware reliability to limit the OEM and suppliers\u00e2\u0080\u0099 warranty and recall costs. The \u201cuse\u201d phase is also where the aftermarket suppliers have the largest opportunities\u00e2\u0080\u0094especially after the warranty period has expired. The large number of car crashes also creates major opportunities as new electronics hardware systems are required. Software Phases The bottom of the figure shows key characteristics for the four phases of automotive software. The software is purely digital with very different characteristics from hardware. But the software is, of course, totally dependent on its associated hardware. The \u201ccreate\u201d phase is the hardest part of software and is normally the most expensive stage of the software business. Large software projects have long development times including difficult testing procedures to correct as many bugs as is economically feasible. Any large software platform is never bug-free and new bugs are discovered throughout the lifetime of the software. The need for cybersecurity has essentially created a new class of software bugs in the completed code\u00e2\u0080\u0094cybersecurity weaknesses that hackers can penetrate for a variety of negative uses. Since most automotive programmers are not expert in cybersecurity technology, they do not know how to avoid code sequences that are vulnerable to hackers. The software \u201ccreate\u201d phase also needs very strong ecosystem to develop new programs and test the resulting software. The auto industry has made good progress and are leveraging or using open source software development systems. The \u201cmake\u201d phase is usually the least expensive stage because software gets a free ride from running on a hardware system. There are some software royalty payments, but usually a small fraction of the hardware parts costs. The \u201cmake\u201d-phase of software is essentially loading the programs into the car\u00e2\u0080\u0099s electronic systems. There is also flexibility of when and how the software is loaded into the electronics systems. The \u201cmarket\u201d phase for software varies by segment and system types. In most cases the software \u201cmarket\u201d phase also goes through a Tier 1 supplier to become part of a car electronics system. Software capabilities also have a growing impact on car sales. This indirect impact is based on the how well the software implements the human-machine interface (HMI) or feature usability. The software usability impact is across all of the growing features\u00e2\u0080\u0094connected car functions, OTA upgrades, functional upgrades, ADAS and future self-driving features. Poor software usability will create negative reviews of cars and will lower future sales potential. Such negative trends have been a problem for advanced infotainment systems and is one reason for Apple and Google\u00e2\u0080\u0099s recent success in infotainment-smartphone integration systems. The automotive \u201cuse\u201d phase normally lasts 10 to 15 years and sometimes longer in many countries. Such long lifetime will require numerous software bug fixes. OTA\u00e2\u0080\u0099s lower costs to fix and update software bugs is needed to limit the OEM\u00e2\u0080\u0099s and software suppliers\u00e2\u0080\u0099 warranty and recall costs. The \u201cuse\u201d phase is where software is seeing large growth opportunities for Software-as-a-Service (SaaS) and cloud software segments. SaaS-based cybersecurity is very promising opportunity. Bug-fixing OTAs and functional software updates have already been flagged as leading use-phase opportunities. Infotainment content via SaaS is also on a promising growth curve. Car crashes also creates opportunities as new hardware systems will need new software. Summary The four phases of software show that the \u201ccreate\u201d phase is the most expensive stage and suggests that the solution is to use software platforms to lower development costs and lower the number of bugs in large programs. The auto industry has starting to embrace a software platform strategy with some help from the high-tech industry, but much more is needed. The next column will add perspectives on where automotive software platforms are today. \u00a0 Egil\u2019s Eye by Egil Juliussen  The Impact of Autonomous Driving on Connected Cars Can You Make Money on Connected Cars? Connected Cars: Let Me Count the Ways Virus, Safety Overhaul AV\u00e2\u0080\u0099s Engine of Change: Part 2      Share this:TwitterFacebookLinkedIn "}