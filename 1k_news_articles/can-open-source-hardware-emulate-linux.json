{"Author": "Nitin Dahad\u00a0", "Date": "02.03.2021", "Keywords": "Hardware Development, ICs, RISC-V, Semiconductors", "Article": " This year marks the 30th anniversary of the Linux kernel\u00e2\u0080\u0099s release. Serving as the basis of the open source software movement, the open source code spawned hundreds of projects using free, public Linux distributions. The result has been a lengthy list of robust, stable and flexible products. Given its success, can the same approach be applied to enabling the adoption of open source hardware? Can an instruction set architecture (ISA) like RISC-V create the basis for the proliferation of open source hardware in the same way that the Linux kernel served as the foundation for open source software? The answer is both yes and no. The architecture of the moment, RISC-V is open and available as a standard, allowing freedom, flexibility and speed in building products around it. But the flip side is that hardware is more complex, and with multiple layers in the stack, this means it\u00e2\u0080\u0099s not as simple as shipping a software package.  The open source movement that transformed software development is gaining traction among hardware developers. Early efforts centered on the RISC-V architecture are leading the way. We explore the promise and the pitfalls of open hardware development in our upcoming Open Source Special Project.  We polled stakeholders in the RISC-V hardware ecosystem \u00e2\u0080\u0094 OpenHW Group, RISC-V International, NXP Semiconductors and Andes Technology. We examine the similarities to open source software, barriers to adoption of open source hardware and the significance of a support community and ecosystem. Finally, we consider: What does open source hardware mean for commercial chip makers? Quality, support ecosystem are key Rick O\u00e2\u0080\u0099Connor, president and CEO of the OpenHW Group, equates RISC-V with the Linux kernel \u00c2\u00a0\u00e2\u0080\u009cThe RISC-V ISA is really what the kernel was for Linux at the beginning, and other open source software projects and initiatives sprung up as a result,\u00e2\u0080\u009d O\u00e2\u0080\u0099Connor told EE Times. \u00e2\u0080\u009cCertainly, the kernel was the seed on the software side 20 years ago, and the ISA is that same seed, I think, on the hardware side.\u00e2\u0080\u009d Rick O\u2019Connor Still, barriers remain to entry in adopting open source hardware. \u00e2\u0080\u009cCertainly, one of them is quality,\u00e2\u0080\u009d O\u00e2\u0080\u0099Connor added. \u00e2\u0080\u009cFor example, if you work in a high-volume chip or SoC [system-on-chip] company, you\u00e2\u0080\u0099re not going to walk into your boss\u00e2\u0080\u0099s office and bet your badge on this IP block that you downloaded and say \u00e2\u0080\u0098We\u00e2\u0080\u0099re ready to go\u00e2\u0080\u0099 based on this cool core from a university, and we should put it in our high volume SoC.\u00e2\u0080\u0099\u00e2\u0080\u009d Hence, the group advocates an open verification flow \u00e2\u0080\u009cthat people can use and see the quality and the results that the ecosystem has achieved, [then] produce what would be expected by a high-volume SoC company if they were doing it totally on their own,\u00e2\u0080\u009d said O\u00e2\u0080\u0099Connor. The group also notes industry misconceptions about RISC-V and the role of the RISC-V International, the foundation that oversees the core ISA specification. \u00e2\u0080\u009cPeople always thought that the foundation was about developing cores,\u00e2\u0080\u009d O\u00e2\u0080\u0099Connor said. \u00e2\u0080\u009cIt\u00e2\u0080\u0099s not. It\u00e2\u0080\u0099s about developing a series of specifications defining the instruction set architecture. And then there\u00e2\u0080\u0099s all kinds of different adoption options: commercial, open source, closed source, for profit, non-profit, written in different languages, depending on what your favorite logic capture language is.\u00e2\u0080\u009d In that respect, he emphasized the OpenHW Group is not just about RISC-V cores. \u00e2\u0080\u009cWhat we are really focused on is developing the artifacts needed for heterogenous cluster computing that can be used in different sizes of SoCs. Clustering different types of cores, accelerators, and all the various blocks that we need.\u00e2\u0080\u009d This is where the RISC-V ISA has played a key role, unleashing \u00e2\u0080\u009ca new frontier in innovation,\u00e2\u0080\u009d O\u00e2\u0080\u0099Connor asserts. \u00e2\u0080\u009cIt\u00e2\u0080\u0099s made it accessible for anyone to stitch a core together, no agreements to sign with anybody. Download the ISA specs and away we go. From that standpoint it\u00e2\u0080\u0099s been a key enabler. If you cast your mind back to 20 years ago, there were many, many, implementations of the Linux kernel\u00e2\u0080\u0094far more than we have today. \u00e2\u0080\u009cOur challenge for the hardware industry is how do we get to the five or six families of cores implementations around RISC-V that will be sustainable.\u00e2\u0080\u009d Rob Oshana, vice president of software engineering for R&D at NXP Semiconductors, suggests open source hardware will evolve in much the same way as has open software. \u00e2\u0080\u009cLinux is actual source code that thousands of developers use and contribute to in a collaborative way\u00e2\u0080\u009d via the Linux Kernel Archives. Rob Oshana \u00e2\u0080\u009cRISC-V International owns a specification, not an implementation. This specification evolved in a very collaborative way and it\u00e2\u0080\u0099s been proven to work given the current state of the RISC-V community and ecosystem,\u00e2\u0080\u009d Oshana said. \u00e2\u0080\u009cBecause the foundation does not own an open implementation, OpenHW Group is filling that void with the charter to develop free, open, royalty-free implementation[s], plus other collateral just like Linux Foundation.\u00e2\u0080\u009d Needed: Community support, not just a spec With the expansion of open source from software to hardware, there is a growing need for community or partner ecosystem involvement. \u00e2\u0080\u009cAny open community requires nurturing, care and feeding.\u00c2\u00a0 Throwing something into a Git and calling it \u00e2\u0080\u0098open\u00e2\u0080\u0099 always fails. A community is needed,\u00e2\u0080\u009d Oshana argued. \u00e2\u0080\u009cOpenHW Group cores would not be successful if it was not for efforts of the community to build cores, boards, software, reference platforms.\u00e2\u0080\u009d OpenHW Group \u00e2\u0080\u009cis leveraging best practices to make this hardware technology successful as well,\u00e2\u0080\u009d he added. The key is leveraging best practices and \u00e2\u0080\u009cinvesting real engineering at a sustained rate to make and keep [hardware development] successful,\u00e2\u0080\u009d Oshana argued. \u00e2\u0080\u009cEach distribution will be unique in some ways.\u00e2\u0080\u009d Meanwhile, open source tools continue to evolve. \u00e2\u0080\u009cWe need a reliable set of hardware-based tools to support this over time,\u00e2\u0080\u009d Oshana noted. He and others suggest the true measure of an open community is the level of engagement. For example, once an implementation is released, a key metric is how the user community manages change requests, bug fixes and the like. \u00e2\u0080\u009cThis is the equivalent of the upstreaming process in Linux,\u00e2\u0080\u009d Oshana said. \u00e2\u0080\u009cThe role of maintainer needs to be clear.\u00e2\u0080\u009d This community aspect is also reinforced by Mark Himelstein, chief technology officer at RISC-V International. \u00e2\u0080\u009cLinux was not necessarily the best OS, but why did people adopt it? Because there\u00e2\u0080\u0099s a community and support. The magic was the pride of ownership. It\u00e2\u0080\u0099s now a no-brainer to use Linux, and with RISC-V, I think we are the Linux of hardware. I believe in five to ten years\u00e2\u0080\u0099 time RISC-V will similarly be a no-brainer for hardware.\u00e2\u0080\u009d Hardware tougher then software Open source hardware and software differ primarily in terms of complexity throughout the stack. \u00e2\u0080\u009cLook at the majority of the volume of the silicon in production today\u00e2\u0080\u0094more than 95 percent of that volume was produced and verified in a Verilog-based tool flow and commercial verification infrastructure for that production release,\u00e2\u0080\u009d O\u00e2\u0080\u0099Connor said. \u00e2\u0080\u009cSo, if we want someone to adopt the cores, they need to be easily stitched into that commercial tool flow.\u00e2\u0080\u009d SoC vendors mostly use SystemVerilog Universal Verification Methodology verification environment. \u00e2\u0080\u009cWe are not going to try to teach or convince them to use something different,\u00e2\u0080\u009d said O\u2019Connor. \u00e2\u0080\u009cIf we really want RTL adoption of these open source blocks, they need to be able to drop into that tool flow.\u00e2\u0080\u009d Mark Himelstein Still, the physics of hardware presents problems not faced by software developers. \u00e2\u0080\u009cRight from the physics at the geometry level in the semiconductor fabs, the recipe behind that fab process,\u00e2\u0080\u009d notes O\u00e2\u0080\u0099Connor, who cites work in areas like process design at larger nodes as encouraging. \u00e2\u0080\u009cYou\u00e2\u0080\u0099ve got the recipe in the fab, the libraries on top of that, the physical layer of those CAD tools to produce GDSII and the mask technology itself; and then the equipment to produce masks, and the simulation and verification software and tools that you use to validate your design, the synthesis tools you use to capture and synthesize your design, and then the IP that goes into those designs,\u00e2\u0080\u009d he explained. \u00e2\u0080\u009cAll of those layers in that stack have deep patent portfolios associated with every layer, developed over decades. And there\u00e2\u0080\u0099s so much linkage between each of those layers. So, trying to replace the whole stack right out of the gate with open source implementations and tools is not something any commercial company is going to try to do,\u00e2\u0080\u009d O\u00e2\u0080\u0099Connor noted. The founders of the OpenHW Group considered whether to create an ecosystem geared specifically toward RISC-V cores. They ultimately decided not to. O\u00e2\u0080\u0099Connor said their first goal was to create those cores. \u00e2\u0080\u009cBut we are doing it with a view and mindset of a vision around solving open source hardware implementation challenges. In other words, make it easy to build heterogenous clusters with common building blocks, and your ability to tailor it with your own secret sauce\u00e2\u0080\u0094accelerators and extensions built around it.\u00e2\u0080\u009d That involves collaborating on the common elements and defining an interface point at the software tools level, at the hardware RTL level, and even at the verification level. \u00e2\u0080\u009cYour value-add is then how you modify that common set of building blocks to add custom acceleration, build these custom heterogenous clusters that implement your secret accelerator algorithm. So, the notion is that RISC-V as an ISA lets us get started on compelling common building blocks at the processor core level, and then build on that. All the while leveraging the best commercial tools to deliver high confidence to the implementers. \u00e2\u0080\u009cSo, the IP is something they can trust.\u00e2\u0080\u009d He predicts open source FPGAs will soon emerge, and eventually SoCs. Commercial perspective Andes Technology is an example of how a commercial company plugs into open source infrastructure. The Taiwanese company has launched several RISC-V based processors, with a number of announced customer implementations. In addition to designing in its RISC-V cores for SK Telecom and Renesas, Andes recently announced that EdgeQ, a startup developing a 5G base station chips, will use its core RISC-V license with an Andes custom extension to deliver an open and programable 5G platform with integrated AI. The custom extension would allow EdgeQ to design, extend, and customize their own instruction sets to achieve novel performance, features and power profiles which they claim are unmet by current wireless infrastructure. Frankwell Lin \u00e2\u0080\u009cRISC-V for us is an open source ISA for the hardware interface or description, not an open source core,\u00e2\u0080\u009d said Frankwell Lin, president of Andes Technology. \u00e2\u0080\u009cIn the RISC-V camp, from company to company, we are competitors. We cooperate at the level of RISC-V standards. However, in the day-to-day business, we have to compete with each other.\u00e2\u0080\u009d Andes touts a decade of experience with embedded RISC cores as well as a proprietary ISA architecture. \u00e2\u0080\u009cAlthough we moved 90 percent of our resources to RISC-V development, we still have our proprietary core, doing license business, and both still work,\u00e2\u0080\u009d Lin said. Besides RISC-V, Lin noted the growing amounts of open and industry standard hardware components. \u00e2\u0080\u009cIn hardware, RISC-V is not the first one being open source.\u00e2\u0080\u009d For example, the Verilog hardware description format is open source, largely by agreement between EDA leaders Cadence and Synopsys, Lin said. Also open are hardware interface standards such as PCIe, USB, OpenCL and OpenCV as well as Bluetooth and WiFi for connectivity. As the roster of open hardware tools grows, a key question is whether a foundation akin to the Linux kernel is needed to spur adoption of open source hardware. As with Linux, community support and individual company contributions are crucial. Still, heavy investments in design tools and production gear make open source hardware a tough sell. Those hurdles mean hardware blocks must be easily integrated with existing tool chains in order to address the far greater complexity at each layer of hardware design and production.     Share this:TwitterFacebookLinkedIn "}